
- type: replace
  path: /instance_groups/name=loghost/jobs/-
  value:
    name: bpm
    release: bpm

- type: replace
  path: /instance_groups/name=loghost/jobs/-
  value:
    name: loghost_exporter
    release: loghost
    properties:
      loghost_exporter:
          custom_patterns:
            - name: "IPLIST"
              value: "(%{IP}(, %{IP})*)"
          metrics:
            - name: loghost_error_total
              type: counter
              help: number of errors logs
              match: '(level=error|level":"error|Subscribe error|lvl=err|lvl=eror)'
              scope: local
              labels: &labels
                #                            base  dir   dep   grp
                director:   '{{gsub .logfile "/var/vcap/store/loghost/(.*?)/(.*?)/(.*?)\\.log" "\\1"}}'
                deployment: '{{gsub .logfile "/var/vcap/store/loghost/(.*?)/(.*?)/(.*?)\\.log" "\\2"}}'
                group:      '{{gsub .logfile "/var/vcap/store/loghost/(.*?)/(.*?)/(.*?)\\.log" "\\3"}}'
            - name: loghost_total
              type: counter
              help: number of logs
              match: '.*'
              scope: global
              labels:
                <<: *labels
            - name: loghost_cf_api_queries
              type: counter
              help: number of queries on cf api
              match: 'CEF:0\|cloud_foundry\|cloud_controller_n.*user=%{WORD:username}.*cs[0-9]+Label=xForwardedFor cs[0-9]+=%{IPLIST:ips}'
              scope: local
              labels:
                <<: *labels
                ips: "{{.ips}}"
                username: "{{.username}}"
            - name: loghost_squid_tunnel_queries
              type: counter
              help: number of tunnel queries handled by squid proxy
              match: "squid\\[rs2\\] %{DATA} %{IP:ip} %{DATA}/%{NUMBER:status} %{NUMBER} CONNECT %{DATA:domain} %{DATA:user} %{DATA}/"
              scope: local
              labels:
                <<: *labels
                ip: "{{.ip}}"
                domain: "{{.domain}}"
                user: "{{.user}}"
                status: "{{.status}}"
            - name: loghost_squid_http_queries
              type: counter
              help: number of http queries handled by squid proxy
              match: "squid\\[rs2\\] %{DATA} %{IP:ip} %{DATA}/%{NUMBER:status} %{NUMBER} %{DATA:method} %{DATA:scheme}://%{URIHOST:domain}%{DATA} %{DATA:user} %{DATA}/"
              scope: local
              labels:
                <<: *labels
                ip: "{{.ip}}"
                scheme: "{{.scheme}}"
                domain: "{{.domain}}"
                user: "{{.user}}"
                status: "{{.status}}"
            # This is intended to expose failing transactions to log services until
            # https://github.com/cloudfoundry/loggregator-agent-release/issues/64 is resolved.
            #
            # Does appear on diego-cells at:
            #  /var/vcap/sys/log/loggr-syslog-agent/loggr-syslog-agent.stderr.log
            # And in the loghosts at:
            #  /var/vcap/store/loghost/*/cf/router*?.log
            - name: loghost_logservice_dropped
              type: counter
              help: number of dropped enveloppes
              match: >-
                ^%{NOTSPACE} %{NOTSPACE} loggr-syslog-agent\[rs2\] %{NOTSPACE} %{NOTSPACE}
                failed to write to %{HOSTPORT:target}, retrying in [^,]+, err:
              scope: local
              labels:
                <<: *labels
                target: '{{.target}}'
          local-directors:
            - ((director_name))
          remote-directors: []

- type: replace
  path: /releases/name=bpm?
  value:
    name: bpm
    version: latest
